
##########################################
# TEOBResumS Hyperbolic capture prior
##########################################

waveform_kwargs:
  domain              : 0       # Time domain. EOBSPA is not available for eccentric waveforms!
  srate_interp        : 2048    # Sampling frequency. Default = 2048.
  use_geometric_units : "no"    # output quantities in geometric units. Default = 1
  interp_uniform_grid : "yes"   # interpolate mode by mode on a uniform grid. Default = "no" (no interpolation)
  use_mode_lm         : [1]     # List of modes to use/output through EOBRunPy.
  # ode
  ode_tmax           : 20e4     # Maximum time for the ODE integration. Default = 20e4.
  # nqcs
  nqc                : 'manual'
  nqc_coefs_flx      : 'none'
  nqc_coefs_hlm      : 'none'
  # Output parameters (Python)
  arg_out            : "no"     # Output hlm/hflm. Default = "no"
  output_hpc         : "yes"     # Output waveform. Default = 1.


parameters:

  M:                          # Total mass of the binary system
    distribution: "uniform"
    kwargs:
      minimum: 10.0
      maximum: 300.0

  q:                          # Mass ratio m1/m2 >= 1
    distribution: "uniform"
    kwargs:
      minimum: 1.0
      maximum: 18.0

  H_hyp:                      # Initial E_eob
    distribution: "uniform"
    kwargs:
      minimum: 1.0
      maximum: 1.01
    
  j_hyp:                      # initial pphi_eob (angular momentum)
    distribution: "delta"
    kwargs:
      value: 4.0

  r_hyp:                      # initial ratial separation
    distribution: "uniform"
    kwargs:
      minimum: 10
      maximum: 1000

  time_shift:
    distribution: "uniform"
    kwargs:
      minimum: -0.25
      maximum: 0.25

  polarization:
    distribution: "uniform"
    kwargs:
      minimum: 0.0
      maximum: torch.pi

  inclination:
    distribution: "sin"
    kwargs:
      minimum: 0.0
      maximum: torch.pi

  distance:
    distribution: "uniform"
    kwargs:
      minimum: 10
      maximum: 2000

  ra:
    distribution: "uniform"
    kwargs:
      minimum: 0.0
      maximum: 2 * torch.pi
    
  dec:
    distribution: "cos"
    kwargs:
      minimum: -torch.pi / 2
      maximum:  torch.pi / 2